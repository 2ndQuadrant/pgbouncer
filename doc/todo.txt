= PgBouncer TODO list =

== Small stuff ==

 * suspend_timeout - drop stalled conns

== Low-prio ==

 * create manpage
 * drop_on_error/keep_on_error - if released conn is in error state,
 then issue rollback and keep it
 * report existing pidfile to console

== Make -R less scary ==

 * -R should somehow log whats happens
 * -R should detect that no pooler is running and boot normally
 * -R should detect if login fails then exit()

==== Details: ====
 * Takeover before fork()
 * must not touch libevent, just fill structures,
 libevent init after fork()
 * ^C while takeover - immidiate _exit()
 * detection:
   * if tcp - try binding
   * if unix - try connect()

== Suspicious items ==

 * keep track of requested client_encoding (+others) and update if needed?
   * original values in welcome pkt
   * static: integer_datetimes, server_encoding, server_version,
   * dynamic?: session_authorization, is_superuser?, standard_conforming_strings, TimeZone
 * keep stats about error counts
 * before loading users, disable all existing
 * auth_conn - access to pg_shadow, so auth_file is not needed
